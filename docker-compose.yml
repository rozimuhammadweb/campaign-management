services:
  app:
    build:
      context: ./docker/php
    container_name: campaign-api
    restart: unless-stopped
    working_dir: /var/www
    tty: true
    volumes:
      - ./:/var/www/
      - ./docker/php/local.ini:/usr/local/etc/php/local.ini
    networks:
      - app-network
    depends_on:
      - postgres
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}


  nginx:
    image: nginx:latest
    container_name: nginx-server
    restart: unless-stopped
    ports:
        - "8080:80"
    volumes:
      - ./:/var/www/
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - app

  postgres:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: "campaign_api"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "secret"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge
